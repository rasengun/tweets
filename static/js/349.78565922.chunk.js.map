{"version":3,"file":"static/js/349.78565922.chunk.js","mappings":"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","sources":["webpack://tweets/./src/components/TweetCard/tweetsCard.module.css?639d","components/TweetCard/TweetCard.jsx","shared/services/tweets-api.js","webpack://tweets/./src/components/TweetsList/tweetslist.module.css?f1fb","components/TweetsList/TweetsList.jsx","pages/Tweets/Tweets.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"tweetsCard_container__1QR1u\",\"logo\":\"tweetsCard_logo__0RuRy\",\"design\":\"tweetsCard_design__EfyUV\",\"line\":\"tweetsCard_line__nn9s-\",\"user\":\"tweetsCard_user__9AHEg\",\"tweets\":\"tweetsCard_tweets__mLHT5\",\"followers\":\"tweetsCard_followers__oN1Fo\",\"button\":\"tweetsCard_button__AdH5L\",\"active\":\"tweetsCard_active__Z5P5k\"};","import logo from \"../../images/logo.png\";\r\nimport card from \"../../images/card.png\";\r\n\r\nimport s from \"./tweetsCard.module.css\";\r\n\r\nexport const TweetCard = ({ tweet, handleFollow }) => {\r\n  return (\r\n    <li>\r\n      <div className={s.container}>\r\n        <img src={logo} alt=\"logo\" className={s.logo} />\r\n        <div>\r\n          <img src={card} alt=\"card\" className={s.design} />\r\n          <div className={s.line}></div>\r\n          <img src={tweet.avatar} alt=\"user\" className={s.user} />\r\n          <p className={s.tweets}>{tweet.tweets} TWEETS</p>\r\n          <p className={s.followers}>{tweet.followers} FOLLOWERS</p>\r\n          <button\r\n            type=\"button\"\r\n            onClick={handleFollow}\r\n            className={tweet.isFollowing ? `${s.button} ${s.active}` : s.button}\r\n          >\r\n            {tweet.isFollowing ? \"Following\" : \"Follow\"}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n","import axios from \"axios\";\r\n\r\nconst tweetsInstance = axios.create({\r\n  baseURL: \"https://6403694af61d96ac487f1c15.mockapi.io/api/tweets\",\r\n});\r\n\r\nexport const fetchTweets = async (setTweets) => {\r\n  try {\r\n    const response = await tweetsInstance.get(\"/\");\r\n\r\n    const savedTweets = JSON.parse(localStorage.getItem(\"tweets\"));\r\n\r\n    if (savedTweets) {\r\n      setTweets(savedTweets);\r\n    } else {\r\n      setTweets(response.data);\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"tweetslist_container__sh1bA\",\"button\":\"tweetslist_button__0TSn7\"};","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { TweetCard } from \"../TweetCard/TweetCard\";\r\n\r\nimport { fetchTweets } from \"./../../shared/services/tweets-api\";\r\n\r\nimport s from \"./tweetslist.module.css\";\r\n\r\nexport const TweetsList = () => {\r\n  const [tweets, setTweets] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [tweetsPerPage] = useState(3);\r\n\r\n  useEffect(() => {\r\n    fetchTweets(setTweets);\r\n  }, []);\r\n\r\n  const totalTweets = tweets.length;\r\n  const lastPage = Math.ceil(totalTweets / tweetsPerPage);\r\n\r\n  const handleLoadMore = () => {\r\n    const nextPage = currentPage + 1;\r\n    setCurrentPage(nextPage);\r\n  };\r\n\r\n  const showLoadMoreButton = currentPage < lastPage;\r\n\r\n  const visibleTweets = tweets.slice(0, currentPage * tweetsPerPage);\r\n\r\n  const handleFollow = (tweetId, setTweets) => {\r\n    setTweets((prevTweets) => {\r\n      const updatedTweets = prevTweets.map((tweet) =>\r\n        tweet.id === tweetId\r\n          ? {\r\n              ...tweet,\r\n              isFollowing: !tweet.isFollowing,\r\n              followers: tweet.isFollowing\r\n                ? tweet.followers - 1\r\n                : tweet.followers + 1,\r\n            }\r\n          : tweet\r\n      );\r\n      localStorage.setItem(\"tweets\", JSON.stringify(updatedTweets));\r\n      return updatedTweets;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ul className={s.container}>\r\n        {visibleTweets.map((tweet) => (\r\n          <TweetCard\r\n            key={tweet.id}\r\n            tweet={tweet}\r\n            handleFollow={() => handleFollow(tweet.id, setTweets)}\r\n          />\r\n        ))}\r\n      </ul>\r\n      {showLoadMoreButton && (\r\n        <button onClick={handleLoadMore}>LOAD MORE</button>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import { TweetsList } from \"../../components/TweetsList/TweetsList\";\r\n\r\nconst Tweets = () => {\r\n  return <TweetsList />;\r\n};\r\n\r\nexport default Tweets;\r\n"],"names":["TweetCard","_ref","tweet","handleFollow","_jsx","children","_jsxs","className","s","src","alt","card","avatar","tweets","followers","type","onClick","isFollowing","concat","tweetsInstance","axios","create","baseURL","fetchTweets","_asyncToGenerator","_regeneratorRuntime","mark","_callee","setTweets","response","savedTweets","wrap","_context","prev","next","get","sent","JSON","parse","localStorage","getItem","data","t0","console","log","stop","_x","apply","arguments","TweetsList","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","currentPage","setCurrentPage","_useState5","tweetsPerPage","useEffect","totalTweets","length","lastPage","Math","ceil","showLoadMoreButton","visibleTweets","slice","_Fragment","map","tweetId","prevTweets","updatedTweets","id","_objectSpread","setItem","stringify"],"sourceRoot":""}